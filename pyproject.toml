[project]
name = "medcompass-ds"
version = "25.1.0.20250428-dev"
description = "Data Science repository for MedCompass"
authors = [{ name = "OKRA Technologies Ltd", email = "info@okra.ai" }]
requires-python = ">=3.11,<3.12"
dependencies = [
    "aiolimiter>=1.1.0,<2",
    "alembic>=1.13.1,<2",
    "bertopic==0.15.0",
    "bm25s>=0.2.3,<0.3",
    "click>=8.1.3,<9",
    # cloudpickle is needed to enable kedro's PickleDataSet to use it as a serialisation backend,
    # which we do, in conf/base/catalog/functionality/generative_llms/catalog_llm_cost_prediction.yml
    "cloudpickle>=3.1.0,<4",
    "compress-pickle>=2.1.0,<3",
    "cupy-cuda11x>=13.3.0,<14,!=13.4.0 ; sys_platform == 'linux'", # 13.4.0 introduces a bug in toDlpack() which will make inference on CUDA fail.
    "dask>=2025.1.0,<2026",
    "duckdb>=1.2.0,<2",
    "evidently>=0.6.2,<0.7",
    "gensim>=4.3.2,<5",
    "hdbscan==0.8.33",
    "httpx>=0.27.0,<0.28",
    "jinja2>=3.1.3,<4",
    "kedro==0.19.10", # 0.19.11 breaks SequentialRunner: https://github.com/kedro-org/kedro/issues/4486
    "kedro-datasets==2.0.0",
    "lxml~=5.1",
    "nltk>=3.6.7,<4",
    "numpy>=1.26.0,<1.27.0",
    "openai>=1.37.1,<2",
    "openpyxl>=3.0.9,<4",
    "pandera>=0.20.2,<0.21",
    "pandas>=2.2.3,<3",
    "plotly>=5.8.0,<6",
    "polars>=0.20.30,<0.21",  # very old version, should be upgraded
    "psycopg2-binary==2.9.9", # 2.9.10 is not installable on mac
    "pycountry>=22.3.5,<23",
    "pydantic>=2.9.2,<3",
    "rapidfuzz>=3.1.1,<4",
    "rbeast>=0.1.17,<0.2",
    "regex>=2024.7.24,<2025",
    "rouge-score>=0.1.2,<0.2",
    "scikit-learn == 1.5.2",
    "scispacy>=0.5.4,<0.6", # scispacy <= 0.5.5 does not allow spacy >= 3.8
    "seaborn>=0.12.2",
    "sentence-transformers>=3.0.0,<4", # spacy < 3.8 does not allow transformers >=4.41, required by higher versions
    "setuptools>=40.8.0",
    "spacy[transformers]>=3.7.0,<4",
    "sqlalchemy>=2.0.29,<3",
    "tiktoken>=0.7,<0.8",
    "torch==2.0.1",
    "types-regex>=2024.7.24.20240726,<2025",
    "typing-extensions>=4.9.0,<5"
]

[project.scripts]
schema-gen = "cli_tools.schemas.generate:main"
schema-eval = "cli_tools.schemas.evaluate:main"
const-analyze = "cli_tools.consts.analyse:main"
const-replace = "cli_tools.consts.replace:main"

[tool.kedro]
package_name = "medcompass_ds"
project_name = "MedCompass (Data Science)"
kedro_init_version = "0.19.11"

[dependency-groups]
dev = [
    "boto3>=1.16.63,<2",
    "boto3-stubs[essential, s3]>=1.34.158,<2",
    "dataframe-image>=0.1.1,<0.2",
    "jupyter>=1.1.1,<2",
    "kaleido==0.2.1",
    "kedro-viz>=10.0.0,<11",
    "lxml-stubs>=0.5.1,<0.6",
    "memory-profiler>=0.61.0,<0.62",
    "memray>=1.10.0,<2",
    "mlflow>=2.12.2,<3",
    "mypy>=1.5.1,<2",
    "pre-commit>=2.15.0,<3",
    "pynvml>=11.5.0,<12",
    "pytest>=6.2.5",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.9.7,<0.10",
    "seaborn>=0.12.2",
    "snakeviz>=2.1.1,<3",
    "types-beautifulsoup4>=4.12.0.20240106,<5",
    "types-python-dateutil>=2.8.10,<3",
    "types-requests>=2.28.11,<3",
    "types-tabulate>=0.9.0.20240106,<0.10",
    "vulture~=2.11",
]
dvc = [
    "dvc[s3]>2.46.0",
    "tomli>=2.0.1,<3",
]
spacy_models = [
    "en-core-sci-lg",
    "en-core-web-trf",
]
grid_search = ["optuna>=3.3.0,<4"]

[tool.uv]
default-groups = [
    "dev",
    "dvc",
    "spacy_models",
    "grid_search",
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
default = false

[[tool.uv.index]]
name = "okra"
url = "https://okra-998607346652.d.codeartifact.eu-west-1.amazonaws.com/pypi/pypi-all/simple/"
default = true

[tool.uv.sources]
en-core-sci-lg = { url = "https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.5.4/en_core_sci_lg-0.5.4.tar.gz" }
en-core-web-trf = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.7.3/en_core_web_trf-3.7.3.tar.gz" }

[tool.hatch.build.targets.sdist]
include = [
    "src/medcompass_ds",
    "src/cli_tools",
]

[tool.hatch.build.targets.wheel]
include = [
    "src/medcompass_ds",
    "src/cli_tools",
]

[tool.hatch.build.targets.wheel.sources]
"src/medcompass_ds" = "medcompass_ds"
"src/cli_tools" = "cli_tools"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
python_version = "3.11"
platform = "linux"
show_column_numbers = true
follow_imports = "normal"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "medcompass_ds.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    'bertopic.*',
    "botocore.*",
    "bm25s.*",
    'boto3.*',
    'dvc.*',
    'gensim.*',
    'google.*',
    'hdbscan.*',
    'keybert.*',
    'langdetect.*',
    'mlflow.*',
    'matplotlib.*',
    "mlflow.*",
    'nltk.*',
    "pandas.*",  # this requires pandas-stubs, but that requires numpy >=1.26.0
    'plotly.*',
    'pycountry.*',
    "pylab.*",
    "recommonmark.*",
    "ruamel.*",
    'scipy.*',
    'scispacy.*',
    'seaborn.*',
    'sentence_transformers.*',
    'setuptools.*',
    'sklearn.*',
    'srsly.*',
    'spacy.pipeline.ner',
    'srsly.*',
    'tqdm.*',
    'transformers.*',
    'umap.*',
    'summa.summarizer',
    "kedro_datasets.*",
    'joblib.*',
    'evidently.*',
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
extend-exclude = ["*.ipynb"]

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules
select = [
    "E",  # pycodestyle, generic rules
    "F",  # Pyflakes, generic rules
    "B",  # bugbear - best practices
    "I",  # isort
    "RUF100",  # unused noqa 
    "ARG",  # unused arguments
    "T20",  # no print() statements
    "UP",  # upgrade to latest Python features
    "W505",  # comment/docstring line length
]
ignore = [
    "E501",  # line length handled by ruff format
    "B011",  # no `assert false`, conflicts with our style conventions
]

[tool.ruff.lint.isort]
known-third-party = ["kedro"]
known-first-party = ["medcompass_ds", "kedro-okra"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.per-file-ignores]
"src/medcompass_ds/pipelines/*.py" = ["ARG001"]
"notebooks/*" = ["ARG", "T20", "W505"]
"scripts/*" = ["T20"]
"src/cli_tools/*" = ["T20"]
