name: Backport Workflows
on:
  pull_request:
    branches:
      - test-main
      - test-stable
    types: [closed]

env:
  AWS_REGION: eu-west-1
  UV_VERSION: "0.6.10"
  PYTHON_VERSION: "3.11.11"
  REPOSITORY_NAME: "pypi-all"

jobs:
  backport-stable-pr:
    if: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'test-main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the base branch (test-main)
        uses: actions/checkout@v4.1.1
        with:
          ref: test-main

      - name: Fetch all branches from origin
        run: git fetch origin

      - name: Checkout the target branch (test-stable)
        run: git checkout test-stable

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Merge changes from test-main into test-stable with unrelated histories
        run: |
          git merge origin/test-main --no-edit --allow-unrelated-histories --strategy-option=theirs

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Update version for stable
        id: update-version-stable
        run: |
          VERSION=$(sed -nE 's/^[[:space:]]*version[[:space:]]*=[[:space:]]*"([^"]+)".*/\1/p' pyproject.toml)
          echo "current_version=$VERSION" >> $GITHUB_OUTPUT
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1-3)
          NEW_VERSION="${MAJOR_MINOR}.${{ steps.date.outputs.date }}"
          sed -i "s/version = \"$VERSION\"/version = \"$NEW_VERSION\"/" pyproject.toml
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          cat pyproject.toml

      - name: Create main-to-stable PR
        id: test-stable-pr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
          commit-message: 'Auto-update version for stable'
          branch: 'backport-${{ steps.update-version-stable.outputs.version }}-${{ steps.date.outputs.date }}'
          title: '[AUTO] Backport main -> stable'
          branch-suffix: timestamp
          base: test-stable
          body: |
            Update version in pyproject.toml to ${{ steps.update-version-stable.outputs.version }}.
            This PR is automatically generated.

      - name: Check created test-stable PR number
        run: |
          echo "Pull Request Number - ${{ steps.test-stable-pr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.test-stable-pr.outputs.pull-request-url }}"

      - name: Merge stable PR
        uses: actions/github-script@v6.1.0
        with:
          github-token: ${{ secrets.BOT_ACCESS_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: parseInt('${{ steps.test-stable-pr.outputs.pull-request-number }}'),
              merge_method: 'merge',
            });
